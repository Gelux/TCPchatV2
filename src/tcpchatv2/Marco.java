/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tcpchatv2;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Jes
 */
public class Marco extends javax.swing.JFrame implements Runnable {

    Cliente cliente;
    Mensaje mEnviado;
    Mensaje mRecibido;
    Thread hiloCliente = new Thread(this);
    ArrayList<User> users;
    int nUsers;

    public Marco(Cliente cliente) {
        initComponents();
        this.cliente = cliente;
        this.requestFocus();
        hiloCliente.start();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jChat = new javax.swing.JTextArea();
        jChatText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaUsers = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jChat.setBackground(new java.awt.Color(255, 255, 255));
        jChat.setColumns(20);
        jChat.setRows(5);
        jScrollPane1.setViewportView(jChat);

        jChatText.setBackground(new java.awt.Color(255, 255, 255));
        jChatText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jChatTextKeyPressed(evt);
            }
        });

        listaUsers.setColumns(20);
        listaUsers.setRows(5);
        jScrollPane2.setViewportView(listaUsers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jChatText)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jChatText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jChatTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jChatTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cliente.enviar(jChatText.getText());
            jChat.append("Tú: " + jChatText.getText() + "\n");
            jChatText.setText("");
        }
    }//GEN-LAST:event_jChatTextKeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea jChat;
    private javax.swing.JTextField jChatText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea listaUsers;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Mensaje aux;
        while (true) {
            try {

                aux = cliente.recibir();
                
                if (aux.getContenido().equals("")) {
                    this.users = aux.getUsers();
                    
                    addUserList(users);
                } else {

                    jChat.append("User" + aux.getUserId() + ": " + aux.getContenido() + "\n");
                    
                    users = aux.getUsers();
                    
                    addUserList(users);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Marco.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void addUserList(ArrayList<User> users) {
        String textoAux = "";
        
        for (int i = 0; i < users.size(); i++) {
            textoAux+=(users.get(i).getUserName() + "\n");
        }

        listaUsers.setText(textoAux);

    }
}
